(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{64:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return o})),r.d(t,"metadata",(function(){return c})),r.d(t,"rightToc",(function(){return i})),r.d(t,"default",(function(){return u}));var n=r(2),s=r(6),a=(r(0),r(91)),o={id:"network-requests",title:"Network Requests"},c={unversionedId:"core/guides/network-requests",id:"core/guides/network-requests",isDocsHomePage:!1,title:"Network Requests",description:"An effect could for example subscribe to a request$ subject and for each value emitted it could be mapped to a network request, and the responses emitted onto a response$ subject.",source:"@site/docs/core/guides/network-requests.md",permalink:"/rx-store/docs/core/guides/network-requests",editUrl:"https://github.com/rx-store/rx-store/tree/master/apps/rx-store-website/docs/core/guides/network-requests.md",sidebar:"core",previous:{title:"Combining in Effects",permalink:"/rx-store/docs/core/guides/combining-in-effects"},next:{title:"Trigger subjects",permalink:"/rx-store/docs/core/guides/trigger-subjects"}},i=[{value:"Concurrent Requests with mergeMap",id:"concurrent-requests-with-mergemap",children:[]},{value:"Prioritize latest requests with switchMap",id:"prioritize-latest-requests-with-switchmap",children:[]},{value:"Complete the requests in order with concatMap",id:"complete-the-requests-in-order-with-concatmap",children:[]},{value:"Ignore requests when there is already a request in flight with exhaustMap",id:"ignore-requests-when-there-is-already-a-request-in-flight-with-exhaustmap",children:[]}],p={rightToc:i};function u(e){var t=e.components,r=Object(s.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},p,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"An effect could for example subscribe to a ",Object(a.b)("inlineCode",{parentName:"p"},"request$")," subject and for each value emitted it could be mapped to a network request, and the responses emitted onto a ",Object(a.b)("inlineCode",{parentName:"p"},"response$")," subject."),Object(a.b)("p",null,"First, we'll define a helper function which makes the actual request, well use the ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://rxjs-dev.firebaseapp.com/api/fetch/fromFetch"}),"fromFetch")," operator, which returns an observable, that when subscribed to performs an HTTP request using the ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch"}),"fetch function"),"."),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"const makeRequest = (request) =>\n  fromFetch(`http://localhost:8080/users/${request.id}`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(request),\n    selector: (response) => response.json(),\n  });\n")),Object(a.b)("h2",{id:"concurrent-requests-with-mergemap"},"Concurrent Requests with mergeMap"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"export const effect = ({ sources, sinks }) =>\n  sources.request$().pipe(\n    mergeMap((request) => makeRequest),\n    sinks.result$()\n  );\n")),Object(a.b)("p",null,Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://rxjs-dev.firebaseapp.com/api/operators/mergeMap"}),"https://rxjs-dev.firebaseapp.com/api/operators/mergeMap")),Object(a.b)("h2",{id:"prioritize-latest-requests-with-switchmap"},"Prioritize latest requests with switchMap"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"export const effect = ({ sources, sinks }) =>\n  sources.request$().pipe(\n    switchMap((request) => makeRequest),\n    sinks.result$()\n  );\n")),Object(a.b)("p",null,Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://rxjs-dev.firebaseapp.com/api/operators/switchMap"}),"https://rxjs-dev.firebaseapp.com/api/operators/switchMap")),Object(a.b)("h2",{id:"complete-the-requests-in-order-with-concatmap"},"Complete the requests in order with concatMap"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"export const effect = ({ sources, sinks }) =>\n  sources.request$().pipe(\n    concatMap((request) => makeRequest),\n    sinks.result$()\n  );\n")),Object(a.b)("p",null,Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://rxjs-dev.firebaseapp.com/api/operators/concatMap"}),"https://rxjs-dev.firebaseapp.com/api/operators/concatMap")),Object(a.b)("h2",{id:"ignore-requests-when-there-is-already-a-request-in-flight-with-exhaustmap"},"Ignore requests when there is already a request in flight with exhaustMap"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"export const effect = ({ sources, sinks }) =>\n  sources.request$().pipe(\n    exhaustMap((request) => makeRequest),\n    sinks.result$()\n  );\n")),Object(a.b)("p",null,Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://rxjs-dev.firebaseapp.com/api/operators/exhaustMap"}),"https://rxjs-dev.firebaseapp.com/api/operators/exhaustMap")))}u.isMDXComponent=!0},91:function(e,t,r){"use strict";r.d(t,"a",(function(){return l})),r.d(t,"b",(function(){return m}));var n=r(0),s=r.n(n);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,s=function(e,t){if(null==e)return{};var r,n,s={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var p=s.a.createContext({}),u=function(e){var t=s.a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},l=function(e){var t=u(e.components);return s.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return s.a.createElement(s.a.Fragment,{},t)}},h=s.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,o=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),l=u(r),h=n,m=l["".concat(o,".").concat(h)]||l[h]||b[h]||a;return r?s.a.createElement(m,c(c({ref:t},p),{},{components:r})):s.a.createElement(m,c({ref:t},p))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,o=new Array(a);o[0]=h;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:n,o[1]=c;for(var p=2;p<a;p++)o[p]=r[p];return s.a.createElement.apply(null,o)}return s.a.createElement.apply(null,r)}h.displayName="MDXCreateElement"}}]);